{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","choosedTab","find","tab","id","className","map","title","classNames","href","onClick","content","App","useState","changeTab","currentTab","getActiveTabTitle","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAkB,SAAC,GAIzB,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEtE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GACT,IACEC,EAEED,EAFFC,GACAG,EACEJ,EADFI,MAGF,OACE,oBACEF,UAAWG,IAAW,CACpB,YAAaJ,IAAOH,EAAWG,KAEjC,UAAQ,MAJV,SAOE,mBACEK,KAAI,WAAML,GACV,UAAQ,UACRM,QAAS,WACHN,IAAOL,GACTC,EAAcG,IALpB,SASGI,KAXEH,UAmBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAWU,cC9CPb,EAAc,CACzB,CAAEM,GAAI,QAASG,MAAO,QAASI,QAAS,eACxC,CAAEP,GAAI,QAASG,MAAO,QAASI,QAAS,eACxC,CAAEP,GAAI,QAASG,MAAO,QAASI,QAAS,gBAG7BC,EAAU,WACrB,MAAmCC,mBAASf,EAAK,GAAGM,IAApD,mBAAOL,EAAP,KAAsBe,EAAtB,KAgBA,OACE,sBAAKT,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCAZsB,WACxB,IAAMU,EAAajB,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,KAEjD,OAAIgB,EACKA,EAAWR,MAGbT,EAAK,GAAGS,MAMSS,MAGtB,cAAC,EAAD,CACElB,KAAMA,EACNC,cAAeA,EACfC,cAvBY,SAACG,GACjBW,EAAUX,EAAIC,WCdlBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7272985a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Tab } from '../../types/tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const choosedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const {\n              id,\n              title,\n            } = tab;\n\n            return (\n              <li\n                className={classNames({\n                  'is-active': id === choosedTab.id,\n                })}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (id !== selectedTabId) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {choosedTab.content}\n      </div>\n    </div>\n  );\n};\n","import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: FC = () => {\n  const [selectedTabId, changeTab] = useState(tabs[0].id);\n\n  const toggleTab = (tab: Tab) => {\n    changeTab(tab.id);\n  };\n\n  const getActiveTabTitle = () => {\n    const currentTab = tabs.find((tab) => tab.id === selectedTabId);\n\n    if (currentTab) {\n      return currentTab.title;\n    }\n\n    return tabs[0].title;\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${getActiveTabTitle()}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={toggleTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}